#!/usr/bin/perl
use strict;
use warnings;

if(not fork){
  system "killall klomp-fifo-writer";
  exec "klomp-fifo-writer &";
}

my $klompCmdExec = 'klomp-cmd';
my $KLOMPCUR = `echo -n \$HOME/.klompcur`;

if(not -e $KLOMPCUR){
  die "$KLOMPCUR does not exist\n";
}
my $cur = `cat $KLOMPCUR`;
my ($initPos, $len, $file);
if($cur !~ /^([0-9\.\-]+) ([0-9\.]+) (.*)/){
  die "Current file $KLOMPCUR malformed";
}

$initPos = $1;
$len = $2;
$file = $3;

my $PID_FILE = '/tmp/klomplayer_pid';
system "kill -9 `cat $PID_FILE` 2>/dev/null";

my $FIFO = '/tmp/klomplayer_fifo';
system "rm -f $FIFO";
system "mkfifo $FIFO";

my $pid = open FH, '-|',
  'mplayer',
  '-quiet',
  '-input', "file=$FIFO",
  '-ss', $initPos,
  $file;

system "echo $pid > $PID_FILE";

my $line = '';
while($line !~ /^Starting playback.../){
  $line = <FH>;
  if(not defined $line){
    die "Error starting mplayer\n";
  }
}

my $sexPos = undef;
my $sexLen = undef;

sub update($$){
  my $pos = shift;
  my $len = shift;
  my $cur = `cat $KLOMPCUR`;
  if($cur !~ s/^([0-9\.\-]+) ([0-9\.]+) (.*)/$pos $len $file/){
    die "Current file $KLOMPCUR malformed";
  }
  if($3 ne $file){
    die "Klomplayer thinks a different file is playing than whats in $KLOMPCUR\n";
  }
  open CURFILE, "> $KLOMPCUR";

  print CURFILE $cur;
  close CURFILE;
}

while(1){
  my $newPid = `cat $PID_FILE`;
  chomp $newPid;
  if($newPid ne $pid){
    die "new $0 is running\n";
  }
  if(not -p $FIFO){
    die "fifo $FIFO is broken\n";
  }

  my $line = <FH>;
  if(not defined $line){
    die "i guess its dead...\n";
  }
  if($line =~ /^Exiting... \(End of file\)/){
    exec "$klompCmdExec next";
  }
  if($line =~ /^ANS_LENGTH=([0-9\.\-]+)/){
    $sexLen = $1;
    update $sexPos, $sexLen if defined $sexPos and defined $sexLen;
  }elsif($line =~ /^ANS_TIME_POSITION=([0-9\.\-]+)/){
    $sexPos = $1;
    update $sexPos, $sexLen if defined $sexPos and defined $sexLen;
  }
}

