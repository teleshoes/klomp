#!/usr/bin/perl
use strict;
use warnings;

my $usage = "Usage:
  $0                        update all libs
  $0 LIB [LIB LIB ..]       updated specified libs
";

sub runOrDie(@);
sub ensureDb();
sub getLibs(@);

sub main(@){
  die $usage if @_ == 1 and $_[0] =~ /^(-h|--help)$/;

  my @libs = getLibs(@_);
  ensureDb();

  for my $lib(@libs){
    print "\nHandling library: $lib\n";

    runOrDie 'klomp-db', '-m', $lib;
    runOrDie 'klomp-db', '-u', $lib;
  }

  for my $lib(@libs){
    my $dir = `klomp-lib -l $lib`;
    chomp $dir;
    my $flacMirrorDir = `klomp-lib -f $lib`;
    chomp $flacMirrorDir;
    system "mkdir", "-p", $flacMirrorDir if $flacMirrorDir ne "";

    if(-e $flacMirrorDir and -e $dir){
      print "\nflacmirror for: $lib\n";
      runOrDie "flacmirror $dir $flacMirrorDir";
    }
  }
}

sub runOrDie(@){
  print "@_\n";
  system @_;
  die "\n'@_' failed\n" if $? != 0;
}

sub ensureDb(){
  print "ensuring klomp db\n";
  system "klomp-db -c 2>/dev/null";
  print "created db\n" if $? == 0;
}

sub getLibs(@){
  my @libs = @_;
  my @allLibs = split /\n/, `klomp-lib`;

  @libs = @allLibs if @libs == 0;

  my %okLibs = map {$_ => 1} @allLibs;
  my %givenLibs = map {$_ => 1} @libs;
  for my $lib(@libs){
    if(not defined $okLibs{$lib}){
      die "Unrecognized library name: $lib\nAvailable: @allLibs\n";
    }
  }
  for my $lib(@allLibs){
    if(not defined $givenLibs{$lib}){
      print "skipped: $lib\n";
    }
  }

  return @libs;
}

&main(@ARGV);
