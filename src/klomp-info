#!/usr/bin/perl
use strict;
use warnings;
use lib "/opt/klomp/lib";
use Klomp::Files;

my $KLOMP_CUR = Klomp::Files::klompFile("cur");
my $KLOMP_HIST = Klomp::Files::klompFile("hist");

my $atts = join "|", qw(album artist number title pos len percent);

my $usage = "Usage:
  $0 [-n] [ARG ARG ARG ..]
    print values for ARGs, separated by spaces
    values are read from $KLOMP_CUR, or if its missing,
    from the first line of $KLOMP_HIST

  ARG   [playlist|ended|$atts]
        playlist prints <PLAYLIST_NAME> unless playlist is main
        ended prints <ended> if klomp cur file is missing
  -n    do not output a trailing newline
";

sub getCur();
sub formatHMS($);

sub main(@){
  my $newline = 1;
  if(@_ > 0 and $_[0] eq '-n'){
    $newline = 0;
    shift;
  }

  my $cur = getCur();
  my @info;
  for my $arg(@_){
    if($arg eq 'playlist'){
      my $pl = `klomp-cmd playlist`;
      chomp $pl;
      push @info, "<$pl>" if $pl ne 'main';
    }elsif($arg eq 'ended'){
      push @info, "<ended>" if not -e $KLOMP_CUR;
    }elsif($arg =~ /^(pos|len|percent)$/){
      if($cur =~ /^(\d+\.\d+)\s*(\d+\.\d+)/){
        my ($pos, $len) = ($1, $2);
        my $percent = $len > 0 ? sprintf "%.0f", $pos/$len*100 : 0;
        push @info, formatHMS $pos if $arg eq 'pos';
        push @info, formatHMS $len if $arg eq 'len';
        push @info, "<$percent>" if $arg eq 'percent';
      }
    }elsif($arg =~ /^($atts)$/){
      push @info, $1 if $cur =~ /^$arg=(.*)$/m;
    }else{
      die "Usage: $0 [arg arg arg]\n\n";
    }
  }
  print join ' ', @info;
  print "\n" if $newline;
}

sub getCur(){
  if(-e $KLOMP_CUR){
    return `cat $KLOMP_CUR`;
  }elsif(-e $KLOMP_HIST){
    my $cur = `head -1 $KLOMP_HIST`;
    $cur =~ s/\/\/\/\\\\\\/\n/g;
    return $cur;
  }else{
    return "";
  }
}

sub formatHMS($){
  my $time = shift;
  $time = int(0.5 + $time);
  my $h = int($time / (60*60));
  my $m = int($time % (60*60) / (60));
  my $s = $time - ($m*60) - ($h*60*60);
  $s = "0$s" if $s < 10;

  if($h == 0){
    return "$m:$s";
  }else{
    $m = "0$m" if $m < 10;
    return "$h:$m:$s";
  }
}

&main(@ARGV);
