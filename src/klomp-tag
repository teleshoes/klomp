#!/usr/bin/perl
use strict;
use warnings;
use lib "/opt/klomp/lib";
use Klomp::Tag;

sub formatTags($$$);
sub guess($$$);

my @cols = qw(title artist albumartist album number date genre);
my $colUsage = join "|", @cols;

my $usage = "Usage:
  $0 [--no-guess] SONG
     Reads tags from the file and prints them e.g.:
          > $0 Zoe_Keating/One_Cello_x_16_Natoma/01_Legions_War.flac
          title:Legions (War)
          artist:Zoë Keating
          album:One Cello x 16: Natoma
          number:1
          date:2005-01-01
          genre:
     If --no-guess is not present, print 'tag⁞guess' if guess is different.
     Guesses are based on the file path and transliteration of real tag, e.g.:
          > $0 -g Ponyo/01/-深海牧場.flac
          title:深海牧場⁞fukami/shinkaibokujou/makiba
          artist:久石譲⁞hisaishijou/yuzuri/yuzuru
          album:崖の上のポニョ [Ghibli]⁞gai/gakenojounoponyo [Ghibli]
          number:01⁞00001
          date:2008
          genre:
  $0 [--no-guess] SONG SONG [SONG ...]
     Reads tags from the files and prints them as above, except:
     -prepends additional fake tag 'path:SONG'
     -separates files with a newline
  $0 --guess=($colUsage) path-hint [value-hint]
     Does not look at the file.
     Prints a reasonable value based on the path-hint,
       or if value-hint is passed in, transliterates/normalizes/strips
       non-ascii characters
     e.g.:
       > $0 --guess=album 'The Beatles/Revolver/01-Taxman.flac'
       Revolver
       > $0 --guess=title 'Ponyo/01-深海牧場.flac' '深海牧場'
       fukami/shinkaibokujou/makiba
       > $0 --guess=date 'Nicole Atkins/Neptune City [2007]/04 Cool Enough.ogg'
       2007
  $0 [-h|--help]
      Print this usage
";

sub main(@){
  die $usage if @_ == 0 or $_[0] eq '-h' or $_[0] eq '--help';
  if((@_ == 2 or @_ == 3) and $_[0] =~ /^--guess=([a-z]+)$/i){
    shift;
    my $col = $1;
    my $pathHint = shift;
    my $valueHint = shift;
    print guess($col, $pathHint, $valueHint) . "\n";
  }else{
    my $showGuesses = 1;
    if(@_ > 0 and $_[0] eq '--no-guess'){
      $showGuesses = 0;
      shift;
    }
    my $showPath = @_ > 1;
    while(@_ > 0){
      print formatTags shift(), $showPath, $showGuesses;
      print "\n" if @_ > 0;
    }
  }
}

sub formatTags($$$){
  my ($path, $showPath, $showGuesses) = @_;
  if(not -f $path){
    print STDERR "Not a file: $path\n";
    return;
  }

  my %tags = Klomp::Tag::readTags $path;
  if($showGuesses){
    for my $tag(keys %tags){
      my $val = $tags{$tag};
      my $guess = guess $tag, $path, $val;
      if($val ne $guess and $guess ne ''){
        $tags{$tag} .= "⁞$guess";
      }
    }
  }
  return ''
    . ($showPath ? "path:$path\n" : '')
    . "title:$tags{title}\n"
    . "artist:$tags{artist}\n"
    . "albumartist:$tags{albumartist}\n"
    . "album:$tags{album}\n"
    . "number:$tags{number}\n"
    . "date:$tags{date}\n"
    . "genre:$tags{genre}\n"
    ;
}

sub guess($$$){
  my ($col, $pathHint, $valueHint) = @_;
  my %okCols = map{$_ => 1} @cols;
  die $usage if not defined $okCols{$col};
  $valueHint = '' if not defined $valueHint;

  return Klomp::Tag::guess $col, $pathHint, $valueHint;
}

&main(@ARGV);
