#!/usr/bin/perl
use strict;
use warnings;

my $QCUR = `echo -n \$HOME/.qcur`;
my $QLIST = `echo -n \$HOME/.qlist`;
my $QHIST = `echo -n \$HOME/.qhistory`;

sub ensureRunning(){
  my @qlist = -e $QLIST ? `cat $QLIST` : ();
  if(@qlist == 0){
    system "q -a";
  }
  my $qcur = -e $QCUR ? `cat $QCUR` : '';
  if($qcur !~ /(^prev)|(^next)|(^[0-9\-\.]+ [0-9\-\.]+)/){
    system "echo next > $QCUR";
  }
  system "qmplayer";
}

my $cmd = shift;
if($cmd eq 'start' or $cmd eq 'restart'){
  system "kill -9 `cat /tmp/qmplayer_pid`";
  ensureRunning;
}elsif($cmd eq 'stop'){
  system "kill -9 `cat /tmp/qmplayer_pid`";
}elsif($cmd eq 'pause'){
  system "kill -0 `cat /tmp/qmplayer_pid`";
  if($? != 0){
    ensureRunning();
  }else{
    system "kill -9 `cat /tmp/qmplayer_pid`";
    system "killall mplayer";
    #system "echo pause > /tmp/qmplayer_fifo";
  }
}elsif($cmd eq 'next'){
  system "echo next > ~/.qcur";
}elsif($cmd eq 'prev'){
  system "echo prev > ~/.qcur";
}elsif($cmd eq 'reset'){
  system "kill -9 `cat /tmp/qmplayer_pid`";
  system "echo -n > $QCUR";
  system "echo -n > $QLIST";
  system "echo -n > $QHIST";
}else{
  system "echo $cmd @ARGV > /tmp/qmplayer_fifo";
}
